package com.lime.account.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.json.MappingJackson2JsonView;

import com.lime.account.service.AccountService;
import com.lime.common.service.CommonService;
import com.lime.util.CommUtils;

import egovframework.rte.psl.dataaccess.util.EgovMap;
import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;


@Controller
public class AccountController {


	@Resource(name = "jsonView")
	private MappingJackson2JsonView jsonView;

	@Resource(name="accountService")
	private AccountService accountService;

	@Resource(name="commonService")
	private CommonService commonService;

	/**
	 *
	 * @param searchVO - 조회할 정보가 담긴 SampleDefaultVO
	 * @param model
	 * @return "egovSampleList"
	 * @exception Exception
	 */
	//accountList페이지
	@RequestMapping(value = "/account/accountList.do")
	public String selectSampleList(HttpServletRequest request,ModelMap model) throws Exception {
		Map<String, Object> inOutMap  = CommUtils.getFormParam(request);
		System.out.println("inOutMap"+inOutMap);
		Map<String,Object> resultMap= commonService.accountList(inOutMap);
		System.out.println("resultMap"+resultMap);
		/*int accountSeq=Integer.parseInt(String.valueOf((resultMap.get(0).get("accountSeq"))));
		 *
		model.put("accountSeq", accountSeq);*/
		model.addAttribute("paginationInfo", (PaginationInfo)resultMap.get("paginationInfo"));
		model.put("accountList", resultMap.get("result"));
		return "/account/accountList";
	}




	/**
	 *
	 * @param request
	 * @return
	 * @throws Exception
	 */
	//Insert 뷰페이지 + combo박스 list목록 1차
	@RequestMapping(value="/account/accountInsert.do")
	public String accountInsert(HttpServletRequest request, ModelMap model) throws Exception{

		Map<String, Object> inOutMap = new HashMap<>();


		inOutMap.put("category", "A000000");
		List<EgovMap> resultMap= commonService.selectCombo(inOutMap);

		System.out.println("accountInsert.resultMap"+resultMap);
		model.put("resultMap", resultMap);

		return "/account/accountInsert";
	}


	/**
	 *
	 * @param request
	 * @return
	 * @throws Exception
	 */
	//select Combo box
	@RequestMapping(value="/account/selectCombo.do")
	public ModelAndView ajaxtest(HttpServletRequest request) throws Exception{
		System.out.println("/account/selectCombo.do");
		ModelAndView mav = new ModelAndView(jsonView);
		Map<String, Object> inOutMap  = CommUtils.getFormParam(request);

		List<EgovMap> resultMap=commonService.selectCombo(inOutMap);
		System.out.println("ajaxtest.resultMap:"+resultMap);
		mav.addObject("resultMap", resultMap);
		//받는 객체가 없기때문에


		return mav;
	}

	//Insert 보내기 후 수정 페이지 이동
	@RequestMapping(value="/account/accountInsertPro.do")
	public String accountInsertPro(HttpServletRequest request, ModelMap model)throws Exception{

		Map<String, Object> inOutMap  = CommUtils.getFormParam(request);

		commonService.insertBoard(inOutMap);

		List<EgovMap> resultMap = commonService.selectOneAccountBySeq(inOutMap);
		System.out.println("&&*&*()&()&");
		System.out.println(resultMap.get(0));
		int accountSeq=Integer.parseInt(String.valueOf((resultMap.get(0).get("accountSeq"))));
		inOutMap.put("account_seq", resultMap);

		model.putAll(inOutMap);
		return "redirect:/account/accountUpdate.do?accountSeq"+accountSeq;
	}
	//업데이트 뷰페이지
	@RequestMapping(value="/account/accountUpdate.do")
	public String accountUpdate(HttpServletRequest request, Model model) throws Exception{
		ModelAndView mav = new ModelAndView(jsonView);
		Map<String, Object> inOutMap  = CommUtils.getFormParam(request);



		List<EgovMap> resultMap= commonService.selectOneAccountBySeq(inOutMap);
		System.out.println("928934892348");
		System.out.println("실행한 inOutMap"+inOutMap);
		System.out.println("실행한 resultMap"+resultMap);

		model.addAttribute("resultMap", resultMap);

		System.out.println("!@#!@#");


		/*mav.addObject("inOutMap",inOutMap);*/
		return "/account/accountUpdate";
	}
}// end of calss
